<?php

namespace celionatti\Bolt\Models;

use celionatti\Bolt\Model;

class User extends Model
{
    protected $table = 'users';
    protected $primaryKey = 'user_id';
    protected $fillable = ['name', 'email'];
    protected $guarded = ['password'];
}

// Usage Example
$user = new User();

// Create a new user
$newUser = $user->create(['name' => 'John Doe', 'email' => 'john@example.com', 'password' => 'secret']);

// Update an existing user
$updatedUser = $user->update($newUser->user_id, ['name' => 'John Smith', 'email' => 'john.smith@example.com']);

// Find a user by primary key
$foundUser = $user->find($newUser->user_id);

// Dynamic attribute setting and saving
$user->name = 'Jane Doe';
$user->email = 'jane@example.com';
$user->save();

// Find user by a different attribute
$foundUserByEmail = $user->findBy(['email' => 'john.smith@example.com']);
if ($foundUserByEmail) {
    echo $foundUserByEmail->name; // Output: John Smith
}

// Using where method for more custom queries
try {
    $user = new User();
    $user->where('email', '=', 'john.smith@example.com');
    echo $user->name; // Output: John Smith
} catch (BoltException $e) {
    echo $e->getMessage(); // Output: Record not found
}

// Paginate users
$page = 1;
$itemsPerPage = 10;
$paginatedUsers = User::paginate($page, $itemsPerPage);

echo 'Total Items: ' . $paginatedUsers['pagination']['total_items'] . PHP_EOL;
echo 'Total Pages: ' . $paginatedUsers['pagination']['total_pages'] . PHP_EOL;
echo 'Current Page: ' . $paginatedUsers['pagination']['current_page'] . PHP_EOL;

foreach ($paginatedUsers['data'] as $user) {
    echo 'User: ' . $user->name . ' - ' . $user->email . PHP_EOL;
}


$users = Users::all();
