<?php

declare(strict_types=1);

require __DIR__ . '/vendor/autoload.php';

require __DIR__ . '/configs/load.php';

use Bolt\Bolt\CLI\BoltCLI;
use Bolt\Bolt\CLI\Strike\AuthenticationCommand;
use Bolt\Bolt\CLI\Strike\ControllerCommand;
use Bolt\Bolt\CLI\Strike\GenerateCommand;
use Bolt\Bolt\CLI\Strike\GreetCommand;
use Bolt\Bolt\CLI\Strike\LayoutCommand;
use Bolt\Bolt\CLI\Strike\MakeCommand;
use Bolt\Bolt\CLI\Strike\MigrationCommand;
use Bolt\Bolt\CLI\Strike\ModelCommand;
use Bolt\Bolt\CLI\Strike\SeederCommand;
use Bolt\Bolt\CLI\Strike\ServerCommand;
use Bolt\Bolt\CLI\Strike\ViewCommand;

$strike = new BoltCLI();


$strike->registerCommand('greet', 'Greet the user', new GreetCommand());
$strike->registerCommand('model', 'Create a model and associated files like migration', new ModelCommand);
$strike->registerCommand('controller', 'Create a controller and associated files like view file', new ControllerCommand);
$strike->registerCommand('view', 'Create a view file, for all types of extensions {Twig: .twig, Blade: .blade.php, or default: .php}', new ViewCommand);
$strike->registerCommand('migration', 'Create a migration file, migrate, rollback, refresh, create', new MigrationCommand);
$strike->registerCommand('make', 'Make Command is for creating complete Package, commands like Resource,', new MakeCommand);
$strike->registerCommand('serve', 'Serve Bolt Framework with the PHP web server,', new ServerCommand);
$strike->registerCommand('layout', 'Create new Layout file', new LayoutCommand);
$strike->registerCommand('generate', 'Generate Command is for , commands like app key,', new GenerateCommand);
$strike->registerCommand('seeder', 'Create a seeder file, generate, drop', new SeederCommand);
$strike->registerCommand('authentication', 'Create an authentication Resources. For the users Model, User Sessions, Migrations - users, login_attempts, and user_sessions. Also auth controller, view - login and signup page.', new AuthenticationCommand);



// Register an alias
$strike->registerAlias('add', 'calculate');
$strike->registerAlias('seed', 'seeder');
$strike->registerAlias('auth', 'authentication');

// Set interactive mode
$strike->setInteractiveMode(true);

// Run the strike
$strike->run();
